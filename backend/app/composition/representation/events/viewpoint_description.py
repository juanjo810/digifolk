"""
Dictionary of descriptions of viewpoints for
the interface
"""

DESCRIPTION = {
    "parts": {
        "metadata.piece_title": "Title of the piece to which the Event belongs.",
        "metadata.composer": "Composer of the piece to which the Event belongs.",
        "metadata.part": "Part of a piece to which the Event belongs.",
        "metadata.voice": "Voice in a part of the piece to which the Event belongs.",
        "metadata.instrument": "Instrument of the part of the piece to which the Event belongs.",

        "basic.chord": "Event is a Chord.",
        "basic.grace": "Event is a Grace Note.",
        "basic.rest": "Event is a Rest.",
        "basic.bioi": "Basic Interval of Offset of the Event to penultimate Event.",

        "duration.length": "Length of the Event.",
        "duration.type": "Type of Event (Quarter Note, Half Note, etc...).",
        "duration.dots": "Number of Dots applied to the duration type of the Event.",
        "duration.slash": "Number of slashes (only applies when Event is a grace note.",
        "duration.tie.type": "Type of tie (if existent) in Event.",
        "duration.tie.style": "style of tie (if existent) in Event. Can be normal, dotted, etc.",

        "pitch.cpitch": "Midi Pitch of Event; if it has decimals, the Event is microtonal.",
        "pitch.dnote": "Note in C, D, E, F, G, A, B notation.",
        "pitch.octave": "Octave in which the note is inserted.",
        "pitch.accidental": "Accidental applied to dnote.",
        "pitch.microtonal": "Microtonality of Event in cents.",
        "pitch.pitch_class": "Pitch class of note.",
        "pitch.chordPitches": "Pitches of Event if Event is chord.",

        "expressions.articulation": "Articulations of Event.",
        "expressions.breath_mark": "Event has a breath mark.",
        "expressions.dynamic": "Dynamics of Event.",
        "expressions.fermata": "Event has a fermata.",
        "expressions.expression": "Usually Text Expressions of an Event.",
        "expressions.ornamentation": "Ornamentations of Event.",
        "expressions.rehearsal": "Event has a rehearsal mark.",
        "expressions.volume": "Volume of the Event (according to expressions present.",
        "expressions.notehead.type": "Type of notehead.",
        "expressions.notehead.fill": "Fill of notehead.",
        "expressions.notehead.parenthesis": "Notehead has surrounding parenthesis.",
        "expressions.slur.begin": "Is at the beginning of a slur.",
        "expressions.slur.end": "Is at the end of a slur.",
        "expressions.slur.between": "Is in a slur.",
        "expressions.diminuendo.begin": "Is at the beginning of a diminuendo.",
        "expressions.diminuendo.end": "Is at the end of a diminuendo.",
        "expressions.diminuendo.between": "Is in a diminuendo.",
        "expressions.crescendo.begin": "Is at the beginning of a crescendo.",
        "expressions.crescendo.end": "Is at the end of a crescendo.",
        "expressions.crescendo.between": "Is in a crescendo.",
        "expressions.clef": "Clef of Event.",

        "key.keysig": "Key Signature (by number of sharps/flats) at the time of Event.",
        "key.measure.key": "Key Analysis at the measure level.",
        "key.measure.scale_degree": "Scale Degree of Event relating to Key Analysed at measure.",
        "key.signatures.key": "Key Analysis at the changes in key signature.",
        "key.signatures.scale_degree": "Scale Degree of Event relating to Key Analysed  at the changes in key signature.",

        "time.timesig": "Time Signature at the time of Event.",
        "time.pulses": "Pulse in the bar in which the Event is contained.",
        "time.barlength": "Length of Bar in which the Event is contained.",
        "time.ref.type": "Type of reference to Tempo Marks (quarter, half).",
        "time.ref.value": "Value of reference to Tempo Marks.",
        "time.metro.value": "Value of Metronome at the time of Event.",
        "time.metro.sound": "Real sound (it may not be equal to value) of Metronome at the time of Event.",
        "time.metro.text": "Tempo as Text written on metronome, such as 'Andante', 'Adagio', etc.",
        "time.barlines.double": "If the Event has a double barline after.",
        "time.barlines.repeat.exists_before": "If the Event happens before a repeat barline.",
        "time.barlines.repeat.direction": "Direction of the repeat (begin, end), when existent.",
        "time.barlines.repeat.is_end": "If it is the last element and there is a repeat barline after.",

        # "phrase.boundary": "Boundaries of phrase (1: means Event is at the beginning of a phrase, 0: at the middle of a phrase, -1: at the end of a phrase).",
        # "phrase.length": "Length of the phrase in which the Event happens.",

        "derived.anacrusis": "Event is in Anacrusis.",
        "derived.seq_int": "Sequential Interval from last note Event.",
        "derived.contour": "Contour (-1, 0, 1) from the cpitch of last note Event.",
        "derived.contour_hd": "Quantized Contour between -4 and 4 from last note Event, depending on the Sequential Interval.",
        "derived.upwards": "Is in an ascending sequence.",
        "derived.downwards": "Is in an descending sequence.",
        "derived.no_movement": "Is in an sequence where there is no movement (notes are always the same).",
        "derived.closure": "Shape defined by the last 3 notes before ecent: 1p for change of direction and 1p for a tone smaller than the preceding one.",
        "derived.registral_direction": "Is a large (>= perfect fifth) jump followed by a direction change or  a small (<= perfect fourth) jump followed by a move in the same direction?",
        "derived.intervallic_difference": "Is a large jump followed by a smaller (3 semitones smaller if in the same direction or 2 semitones if reversing the direction) jump? Is a small jump followed by a similar interval?",
        "derived.bioi_ratio": "Bioi divided by the previous bioi.",
        "derived.bioi_contour": "Contour (-1, 0, 1) from the bioi of last Event.",
        "derived.dur_ratio": "Duration length divided by the previous duration length.",
        "derived.dur_contour": "Contour (-1, 0, 1) from the duration length of last Event.",
        "derived.fib": "Event is the first element in a bar.",
        "derived.posinbar": "Position of the Event in a bar.",
        "derived.beat_strength": "Strength of the Event in relation to bar.",
        "derived.tactus": "Is in a tactus.",
        "derived.intfib": "Sequential Interval from note to fib of respective bar.",
        "derived.thrbar": "Sequential Interval from note (if fib) to last fib.",
        # "derived.intphrase": ""
    },

    "inter-part": {

        "metadata.composer": "Composer of the Piece",
        "metadata.piece_title": "Title of the Piece",

        "duration.length": "Length of the Event.",
        "duration.type": "Type of Event (Quarter Note, Half Note, etc...).",
        "duration.dots": "Number of Dots applied to the duration type of the Event.",

        "tie.type": "Type of tie (if existent) in Event.",
        "tie.style": "Style of tie (if existent) in Event.",

        "basic.root": "Root of the chord.",
        "basic.pitches": "Pitches in the chord.",
        "basic.cardinality": "Cardinality of the chord (number of notes).",
        "basic.inversion": "Inversion of the chord.",
        "basic.prime_form": "Prime Form (the most compact (i.e., leftwards packed or smallest in lexicographic order) of either the normal form of a set or of its inversion.) of Chord.",
        "basic.quality": "Qualities of the chord.",

        "classes.pc_ordered": "Pitch Classes of the chord, ordered.",
        "classes.pc_cardinality": "Cardinality of pitch classes in chord.",
        "classes.pitch_class": "Pitch Classes of the Chord.",
        "classes.forte_class": "Forte Class relating to Forte Class Number.",
        "classes.forte_class_number": "Forte Class Number (pair of numbers Allen Forte assigned to the prime form of each pitch class set).",

        "quality.is_consonant": "Is the Event a consonant Chord?",
        "quality.is_major_triad": "Is the Event a major triad Chord?",
        "quality.is_incomplete_major_triad": "Is the Event an incomplete major triad Chord?",
        "quality.is_minor_triad": "Is the Event a minor triad Chord?",
        "quality.is_incomplete_minor_triad": "Is the Event an incomplete minor triad Chord?",
        "quality.is_augmented_sixth": "Is the Event an augmented sixth Chord?",
        "quality.is_french_augmented_sixth": "Is the Event a french augmented sixth Chord?",
        "quality.is_german_augmented_sixth": "Is the Event a german augmented sixth Chord?",
        "quality.is_italian_augmented_sixth": "Is the Event an italian augmented sixth Chord?",
        "quality.is_swiss_augmented_sixth": "Is the Event a swiss augmented sixth Chord?",
        "quality.is_augmented_triad": "Is the Event an augmented triad Chord?",
        "quality.is_half_diminished_seventh": "Is the Event a half-diminshed seventh Chord?",
        "quality.is_diminished_seventh": "Is the Event a diminshed seventh Chord?",
        "quality.is_dominant_seventh": "Is the Event a dominant seventh Chord?",

        "key.keysig": "Key Signature (by number of sharps/flats) at the time of Event.",
        "key.measure.key": "Key Analysis at the measure level.",
        "key.measure.certainty": "Certainty of the analysis of key at measure level.",
        "key.measure.function": "Function of the chord relating to Key Analysed at the measure of the Event.",
        "key.signatures.key": "Key Analysis at changes in key signature.",
        "key.signatures.certainty": "Certainty of the analysis of key at changes in key signature.",
        "key.signatures.function": "Function of the chord relating to Key Analysed at key signature level.",
    }
}
